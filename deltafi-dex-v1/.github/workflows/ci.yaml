name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source scripts/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal
          components: rustfmt

      - name: Run fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Install Dependencies
        run:  sudo apt-get install -y libssl-dev --allow-unauthenticated

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source scripts/rust-version.sh
          echo "RUST_NIGHTLY=$rust_nightly" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_NIGHTLY }}
          override: true
          profile: minimal
          components: clippy

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-clippy-

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -Zunstable-options --workspace --all-targets -- --deny=warnings

  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source scripts/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
          source scripts/solana-version.sh
          echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            # target # Removed due to build dependency caching conflicts
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_STABLE}}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/rustfilt
          key: cargo-bpf-bins-${{ runner.os }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ env.SOLANA_VERSION }}

      - name: Install dependencies
        run: |
          sudo apt-get install -y libssl-dev --allow-unauthenticated
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build and test
        run: ./scripts/cargo-build-test.sh

      - name: Coverage
        run: |
          cargo install cargo-tarpaulin
          cargo tarpaulin -v

  build-test-bpf:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source scripts/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
          source scripts/solana-version.sh
          echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_STABLE}}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/rustfilt
          key: cargo-bpf-bins-${{ runner.os }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ env.SOLANA_VERSION }}

      - name: Install dependencies
        run: |
          ./scripts/install-build-deps.sh
          ./scripts/install-program-deps.sh
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Build and test
        run: ./scripts/cargo-test-bpf.sh

  js-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set env vars
        run: |
          source scripts/rust-version.sh
          echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
          source scripts/solana-version.sh
          echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ env.RUST_STABLE }}
          override: true
          profile: minimal

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_STABLE}}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/rustfilt
          key: cargo-bpf-bins-${{ runner.os }}

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cache
          key: solana-${{ env.SOLANA_VERSION }}

      - name: Install dependencies
        run: |
          ./scripts/install-build-deps.sh
          ./scripts/install-program-deps.sh
          echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '12'
      
      - name: Install and test
        run: npm install -g yarn && yarn --cwd lib/client install && yarn --cwd lib/client ci

